{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "/lms",
  "redirects": [
    {
      "source": "/lms/",
      "destination": "/lms",
      "basePath": false,
      "internal": true,
      "statusCode": 308,
      "regex": "^/lms/$"
    },
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin/classes/ClassCreate",
      "regex": "^/admin/classes/ClassCreate(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/classes/ClassCreate(?:/)?$"
    },
    {
      "page": "/admin/classes/ClassList",
      "regex": "^/admin/classes/ClassList(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/classes/ClassList(?:/)?$"
    },
    {
      "page": "/admin/dashboard",
      "regex": "^/admin/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/dashboard(?:/)?$"
    },
    {
      "page": "/admin/users/AdminManagement",
      "regex": "^/admin/users/AdminManagement(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/users/AdminManagement(?:/)?$"
    },
    {
      "page": "/admin/users/StudentManagement",
      "regex": "^/admin/users/StudentManagement(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/users/StudentManagement(?:/)?$"
    },
    {
      "page": "/admin/users/TeachersManagement",
      "regex": "^/admin/users/TeachersManagement(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/users/TeachersManagement(?:/)?$"
    },
    {
      "page": "/content/VideoLibrary",
      "regex": "^/content/VideoLibrary(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/content/VideoLibrary(?:/)?$"
    },
    {
      "page": "/dashboards/admin",
      "regex": "^/dashboards/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboards/admin(?:/)?$"
    },
    {
      "page": "/dashboards/student",
      "regex": "^/dashboards/student(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboards/student(?:/)?$"
    },
    {
      "page": "/dashboards/superadmin",
      "regex": "^/dashboards/superadmin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboards/superadmin(?:/)?$"
    },
    {
      "page": "/dashboards/teacher",
      "regex": "^/dashboards/teacher(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboards/teacher(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/NotFound",
      "regex": "^/NotFound(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/NotFound(?:/)?$"
    },
    {
      "page": "/stem-labs",
      "regex": "^/stem\\-labs(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/stem\\-labs(?:/)?$"
    },
    {
      "page": "/student/dashboard",
      "regex": "^/student/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/student/dashboard(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}