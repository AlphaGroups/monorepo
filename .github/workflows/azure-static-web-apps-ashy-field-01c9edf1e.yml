name: Azure Static Web Apps CI/CD (monorepo â€” auto-detect artifact)

on:
  push:
    branches: [ main ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build web app
        run: yarn build:web

      - name: Debug - list app folder and common build outputs
        run: |
          echo "Listing apps/web:"
          ls -la apps/web || true
          echo "Check common outputs:"
          ls -la apps/web/build || true
          ls -la apps/web/out || true
          ls -la apps/web/.output || true
          ls -la apps/web/dist || true
          ls -la apps/web/.next || true

      - name: Detect build artifact
        id: detect
        run: |
          if [ -d "apps/web/build" ]; then
            echo "artifact=apps/web/build" >> $GITHUB_OUTPUT
          elif [ -d "apps/web/out" ]; then
            echo "artifact=apps/web/out" >> $GITHUB_OUTPUT
          elif [ -d "apps/web/.output" ]; then
            echo "artifact=apps/web/.output" >> $GITHUB_OUTPUT
          elif [ -d "apps/web/dist" ]; then
            echo "artifact=apps/web/dist" >> $GITHUB_OUTPUT
          elif [ -d "apps/web/.next" ]; then
            # Oryx/Static Web Apps often copy usable static files to app root for Next.js
            echo "artifact=apps/web" >> $GITHUB_OUTPUT
          else
            # fallback to app root
            echo "artifact=apps/web" >> $GITHUB_OUTPUT
          fi
          echo "Detected artifact: ${{ steps.detect.outputs.artifact }}"

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "apps/web"
          api_location: ""                          # set if you have an API folder
          app_artifact_location: ${{ steps.detect.outputs.artifact }}
